tags:
  - name: Orders
    description: Customer orders and payment endpoints.
paths:
  /api/v2/orders:
    post:
      tags:
        - Orders
      summary: Create a new order.
      security:
        - TokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - branchId
                - items
                - address
              properties:
                branchId:
                  type: string
                address:
                  type: string
                items:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required:
                      - variantId
                      - quantity
                    properties:
                      variantId:
                        type: string
                      quantity:
                        type: integer
                        minimum: 1
                      notes:
                        type: string
      responses:
        "200":
          description: Order created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/Order"
        "400":
          description: Validation error.
        "500":
          description: Failed to create order.
    get:
      tags:
        - Orders
      summary: List all orders (admin / branch staff).
      security:
        - TokenAuth: []
      parameters:
        - in: query
          name: branchId
          schema:
            type: string
          description: Optional branch filter (admin only).
      responses:
        "200":
          description: Orders fetched.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
        "403":
          description: User is not allowed to list orders.
  /api/v2/orders/me:
    get:
      tags:
        - Orders
      summary: List orders of the current user.
      security:
        - TokenAuth: []
      responses:
        "200":
          description: Orders fetched.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
  /api/v2/orders/confirm-payment:
    post:
      tags:
        - Orders
      summary: Confirm an offline payment.
      security:
        - TokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - orderId
                - provider
                - transactionId
                - amount
              properties:
                orderId:
                  type: string
                provider:
                  type: string
                  example: cash
                transactionId:
                  type: string
                amount:
                  type: number
                  format: double
      responses:
        "200":
          description: Payment confirmation processed.
  /api/v2/orders/pay/vnpay:
    post:
      tags:
        - Orders
      summary: Initiate a VNPAY payment session.
      security:
        - TokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - orderId
                - amount
              properties:
                orderId:
                  type: string
                amount:
                  type: number
                  format: double
      responses:
        "200":
          description: Payment URL generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      paymentUrl:
                        type: string
                        format: uri
  /api/v2/orders/pay/vnpay/verify:
    get:
      tags:
        - Orders
      summary: Handle VNPAY return URL.
      parameters:
        - in: query
          name: vnp_ResponseCode
          schema:
            type: string
        - in: query
          name: vnp_TxnRef
          schema:
            type: string
        - in: query
          name: vnp_Amount
          schema:
            type: string
        - in: query
          name: vnp_SecureHash
          schema:
            type: string
      responses:
        "200":
          description: Verification result.
  /api/v2/orders/{orderId}/status:
    patch:
      tags:
        - Orders
      summary: Update order status (admin or branch staff).
      security:
        - TokenAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - pending
                    - confirmed
                    - preparing
                    - in_transit
                    - delivered
                    - cancelled
      responses:
        "200":
          description: Order status updated.
  /api/v2/orders/{orderId}/confirm-receipt:
    patch:
      tags:
        - Orders
      summary: Confirm that the order was received by the customer.
      security:
        - TokenAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Confirmation result.
